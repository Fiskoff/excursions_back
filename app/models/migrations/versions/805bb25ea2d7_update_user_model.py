"""update user_model

Revision ID: 805bb25ea2d7
Revises: 0fb351a1d71b
Create Date: 2024-10-10 21:52:27.783015

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '805bb25ea2d7'
down_revision: Union[str, None] = '0fb351a1d71b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('username', sa.String(), nullable=False))
    op.add_column('user', sa.Column('password', sa.LargeBinary(), nullable=False))
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint('user_email_key', 'user', type_='unique')
    op.drop_column('user', 'refresh_token')
    op.drop_column('user', 'refresh_token_expiry')
    op.drop_column('user', 'hash_password')
    op.drop_column('user', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('user', sa.Column('hash_password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('user', sa.Column('refresh_token_expiry', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('refresh_token', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_unique_constraint('user_email_key', 'user', ['email'])
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('user', 'password')
    op.drop_column('user', 'username')
    # ### end Alembic commands ###
